/**
 * 原始值
 *存储在栈（stack）中的简单数据段，也就是说，它们的值直接存储在变量访问的位置。
 *
 *引用值
 *存储在堆（heap）中的对象，也就是说，存储在变量处的值是一个指针（point），指向存储对象的内存处。
 *
 * 如果一个值是引用类型的，那么它的存储空间将从堆中分配。由于引用值的大小会改变，所以不能把它放在栈中，否则会降低变量查寻的速度。相反，放在变量的栈空间中的值是该对象存储在堆中的地址。地址的大小是固定的，所以把它存储在栈中对变量性能无任何负面影响
 */

// 问题一：const定义一个对象，对象中属性的值可以修改么
const a = { b: 1 };
a.b = 2;
console.log(a);
// { b: 2 }
// 解答：
// const实际上保证的，并不是变量的值不得改动，而是变量指向的那个内存地址所保存的数据不得改动。
// const只能保证这个指针是固定的（即总是指向另一个固定的地址），至于它指向的数据结构是不是可变的，就完全不能控制了
